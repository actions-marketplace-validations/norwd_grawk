---

name: Grok with AWK
author: norwd
description: "GitHub Action to grok stuff... with AWK!"

branding:
  icon: code
  color: red

inputs:
  input:
    required: false
    description: |
      The input to the awk program.

  input-file:
    required: false
    description: |
      The pathname of the file containing the input to the awk program.

  separator:
    required: false
    description: |
      The input field separator.

  program:
    required: false
    description: |
      The text of the awk program.

  program-file:
    required: false
    description: |
      The pathname of the file containing an awk program.

outputs:
  result:
    value: ${{ steps.awk.outputs.result }}
    description: |
      The result of the awk script.

runs:
  using: "composite"
  steps:
    - name: "Get Config"
      id: config
      shell: bash
      env:
        DATA_TEXT: ${{ inputs.input        }}
        DATA_FILE: ${{ inputs.input-file   }}
        DATA_FULL: ${{ runner.temp         }}/std.in
        SEPARATOR: ${{ inputs.separator    }}
        PROG_TEXT: ${{ inputs.program      }}
        PROG_FILE: ${{ inputs.program-file }}
        PROG_FULL: ${{ runner.temp         }}/gr.awk
      run: |
        if [ -f "${DATA_FILE}" ]
        then
          cat "${DATA_FILE}" >> "${DATA_FULL}"
        fi

        if [ ! -z "${DATA_TEXT}" ]
        then
          echo "${DATA_TEXT}" >> "${DATA_FULL}"
        fi

        echo "" >> "${DATA_FULL}"

        echo "data-file=${DATA_FULL}" >> "${GITHUB_OUTPUT}"

        if [ -f "${PROG_FILE}" ]
        then
          cat "${PROG_FILE}" >> "${PROG_FULL}"
        fi

        if [ ! -z "${PROG_TEXT}" ]
        then
          echo "${PROG_TEXT}" >> "${PROG_FULL}"
        fi

        echo "" >> "${PROG_FULL}"

        echo "prog-file=${PROG_FULL}" >> "${GITHUB_OUTPUT}"

    - name: "Debug Grawk Input"
      if: runner.debug == 1
      shell: bash
      run: cat "${{ steps.config.outputs.data-file }}"

    - name: "Debug Grawk Program"
      if: runner.debug == 1
      shell: bash
      run: cat "${{ steps.config.outputs.prog-file }}"

    - name: "Run awk script"
      id: awk
      shell: bash
      env:
        SEPARATOR: ${{ inputs.separator }}
      run: |
        delimiter="$(openssl rand -hex 8)"

        echo "result<<${delimiter}" >> "${GITHUB_OUTPUT}"
        cat "${{ steps.config.outputs.data-file }}" | awk ${{ inputs.separator && '-F "${SEPARATOR}"' || '' }} -f "${{ steps.config.outputs.prog-file }}" | tee -a "${GITHUB_OUTPUT}"
        echo "${delimiter}" >> "${GITHUB_OUTPUT}"
